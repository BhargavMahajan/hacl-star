/* This file was auto-generated by KreMLin! */
#include "kremlib.h"
#ifndef __FStar_H
#define __FStar_H





typedef void *FStar_Pervasives_ex_pre;

typedef enum {
  FStar_Pervasives_PpxDerivingShow,
  FStar_Pervasives_PpxDerivingShowConstant,
  FStar_Pervasives_CInline,
  FStar_Pervasives_Substitute,
  FStar_Pervasives_Gc,
  FStar_Pervasives_Comment
}
FStar_Pervasives___internal_ocaml_attributes_tags;

typedef struct 
{
  FStar_Pervasives___internal_ocaml_attributes_tags tag;
  union {
    struct  { Prims_string _0; } case_PpxDerivingShowConstant;
    struct  { Prims_string _0; } case_Comment;
  }
  ;
}
FStar_Pervasives___internal_ocaml_attributes;

typedef void *FStar_Set_eqtype;

extern void FStar_PropositionalExtensionality_axiom();

typedef void *(*FStar_ST_gst_pre)(FStar_Monotonic_Heap_heap x0);

extern FStar_Monotonic_Heap_heap FStar_ST_gst_get();

extern void FStar_ST_gst_put(FStar_Monotonic_Heap_heap x0);

typedef void *(*FStar_ST_heap_predicate)(FStar_Monotonic_Heap_heap x0);

typedef void *(*FStar_ST_st_pre)(FStar_Monotonic_Heap_heap x0);

extern Prims_int FStar_Int_logand(Prims_pos x0, Prims_int x1, Prims_int x2);

extern Prims_int FStar_Int_logxor(Prims_pos x0, Prims_int x1, Prims_int x2);

extern Prims_int FStar_Int_logor(Prims_pos x0, Prims_int x1, Prims_int x2);

extern Prims_int FStar_Int_lognot(Prims_pos x0, Prims_int x1);

extern Prims_int FStar_Int_shift_right(Prims_pos x0, Prims_int x1, Prims_nat x2);

typedef void *(*FStar_HyperStack_All_all_pre)(FStar_Monotonic_HyperStack_mem x0);

typedef struct 
{
  Prims_nat fst;
  Prims_nat snd;
  Prims_nat thd;
}
K___Prims_nat_Prims_nat_Prims_nat;

typedef K___Prims_nat_Prims_nat_Prims_nat FStar_PKCS11_DateTime_date;

extern K___Prims_nat_Prims_nat_Prims_nat FStar_PKCS11_DateTime_parseDate(void *x0);

typedef uint8_t *FStar_PKCS11_TypeDeclaration_bytes;

typedef uint64_t FStar_PKCS11_TypeDeclaration_int;

typedef Prims_list__FStar_PKCS11_TypeDeclaration_attribute_t
*FStar_PKCS11_TypeDeclaration_attributes_t;

typedef void *FStar_PKCS11_TypeDeclaration_flags_t;

typedef struct 
{
  uint64_t identifier;
  uint8_t *value;
  uint64_t length;
}
FStar_PKCS11_TypeDeclaration_attribute_raw;

typedef Prims_list__FStar_PKCS11_TypeDeclaration_attribute_raw
*FStar_PKCS11_TypeDeclaration_attributes_raw;

typedef struct 
{
  uint32_t identifier;
  uint8_t *value;
  uint32_t length;
}
FStar_PKCS11_TypeDeclaration_mechanism_raw;

extern uint32_t
FStar_PKCS11_Mechanism_mechanismGetType(FStar_PKCS11_TypeDeclaration_mechanism x0);

extern void
FStar_PKCS11_Mechanism_mechanismGetFunctionGeneration(
  FStar_PKCS11_TypeDeclaration_mechanism x0,
  uint8_t *x1,
  uint32_t x2
);

extern bool
FStar_PKCS11_Mechanism_mechanismIsNotFound(FStar_PKCS11_TypeDeclaration_mechanism x0);

extern uint32_t
FStar_PKCS11_Mechanism_getMechanismRawTypeID(FStar_PKCS11_TypeDeclaration_mechanism_raw x0);

extern uint8_t
*FStar_PKCS11_Mechanism_getMechanismRawParameters(
  FStar_PKCS11_TypeDeclaration_mechanism_raw x0
);

extern uint8_t
*FStar_PKCS11_Attribute_attributeRawGetData(FStar_PKCS11_TypeDeclaration_attribute_raw x0);

extern uint64_t
FStar_PKCS11_Attribute_attributeRawGetLength(FStar_PKCS11_TypeDeclaration_attribute_raw x0);

extern uint32_t
FStar_PKCS11_Attribute_attrubuteSearchKeyLength(
  Prims_list__FStar_PKCS11_TypeDeclaration_attribute_t *x0
);

bool
FStar_PKCS11_Attribute_atrributesAllValid(
  Prims_list__FStar_PKCS11_TypeDeclaration_attribute_t *s
);

bool
FStar_PKCS11_Attribute_attributesForAllNotReadOnly(
  Prims_list__FStar_PKCS11_TypeDeclaration_attribute_t *s
);

typedef enum { FStar_Pervasives_Native_None, FStar_Pervasives_Native_Some }
FStar_Pervasives_Native_option__FStar_PKCS11_TypeDeclaration_attribute_t_tags;

typedef struct 
{
  FStar_Pervasives_Native_option__FStar_PKCS11_TypeDeclaration_attribute_t_tags tag;
  union { struct  { FStar_PKCS11_TypeDeclaration_attribute_t v; } case_Some; } ;
}
FStar_Pervasives_Native_option__FStar_PKCS11_TypeDeclaration_attribute_t;

bool
FStar_PKCS11_Attribute_attributesSufficient(
  Prims_list__FStar_PKCS11_TypeDeclaration_attribute_t *attr,
  FStar_PKCS11_TypeDeclaration_mechanism m
);

extern bool FStar_PKCS11_Cast_bytesToBoolean(void *x0, Prims_nat x1);

typedef enum {
  FStar_PKCS11_Exception_CKR_GENERAL_ERROR,
  FStar_PKCS11_Exception_CKR_HOST_MEMORY,
  FStar_PKCS11_Exception_CKR_FUNCTION_FAILED
}
FStar_PKCS11_Exception_exp_ckr_general;

typedef enum {
  FStar_PKCS11_Exception_CKR_SESSION_HANDLE_INVALID,
  FStar_PKCS11_Exception_CKR_DEVICE_REMOVED_Session,
  FStar_PKCS11_Exception_CKR_SESSION_CLOSED
}
FStar_PKCS11_Exception_exp_ckr_session;

typedef enum {
  FStar_PKCS11_Exception_CKR_DEVICE_MEMORY,
  FStar_PKCS11_Exception_CKR_DEVICE_ERROR,
  FStar_PKCS11_Exception_CKR_TOKEN_NOT_PRESENT,
  FStar_PKCS11_Exception_CKR_DEVICE_REMOVED_Token
}
FStar_PKCS11_Exception_exp_ckr_token;

typedef enum { FStar_PKCS11_Exception_CKR_CANCEL } FStar_PKCS11_Exception_exp_ckr_callback;

typedef enum {
  FStar_PKCS11_Exception_CKR_MUTEX_BAD,
  FStar_PKCS11_Exception_CKR_MUTEX_NOT_LOCKED
}
FStar_PKCS11_Exception_exp_ckr_mutex;

typedef enum {
  FStar_PKCS11_Exception_CKR_ACTION_PROHIBITED,
  FStar_PKCS11_Exception_CKR_ARGUMENTS_BAD,
  FStar_PKCS11_Exception_CKR_ATTRIBUTE_READ_ONLY,
  FStar_PKCS11_Exception_CKR_ATTRIBUTE_SENSITIVE,
  FStar_PKCS11_Exception_CKR_ATTRIBUTE_TYPE_INVALID,
  FStar_PKCS11_Exception_CKR_ATTRIBUTE_VALUE_INVALID,
  FStar_PKCS11_Exception_CKR_BUFFER_TOO_SMALL,
  FStar_PKCS11_Exception_CKR_CANT_LOCK,
  FStar_PKCS11_Exception_CKR_CRYPTOKI_ALREADY_INITIALIZED,
  FStar_PKCS11_Exception_CKR_CRYPTOKI_NOT_INITIALIZED,
  FStar_PKCS11_Exception_CKR_CURVE_NOT_SUPPORTED,
  FStar_PKCS11_Exception_CKR_DATA_INVALID,
  FStar_PKCS11_Exception_CKR_DATA_LEN_RANGE,
  FStar_PKCS11_Exception_CKR_DOMAIN_PARAMS_INVALID,
  FStar_PKCS11_Exception_CKR_ENCRYPTED_DATA_INVALID,
  FStar_PKCS11_Exception_CKR_ENCRYPTED_DATA_LEN_RANGE,
  FStar_PKCS11_Exception_CKR_EXCEEDED_MAX_ITERATIONS,
  FStar_PKCS11_Exception_CKR_FIPS_SELF_TEST_FAILED,
  FStar_PKCS11_Exception_CKR_FUNCTION_CANCELED,
  FStar_PKCS11_Exception_CKR_FUNCTION_NOT_PARALLEL,
  FStar_PKCS11_Exception_CKR_FUNCTION_NOT_SUPPORTED,
  FStar_PKCS11_Exception_CKR_FUNCTION_REJECTED,
  FStar_PKCS11_Exception_CKR_INFORMATION_SENSITIVE,
  FStar_PKCS11_Exception_CKR_KEY_CHANGED,
  FStar_PKCS11_Exception_CKR_KEY_FUNCTION_NOT_PERMITTED,
  FStar_PKCS11_Exception_CKR_KEY_HANDLE_INVALID,
  FStar_PKCS11_Exception_CKR_KEY_INDIGESTIBLE,
  FStar_PKCS11_Exception_CKR_KEY_NEEDED,
  FStar_PKCS11_Exception_CKR_KEY_NOT_NEEDED,
  FStar_PKCS11_Exception_CKR_KEY_NOT_WRAPPABLE,
  FStar_PKCS11_Exception_CKR_KEY_SIZE_RANGE,
  FStar_PKCS11_Exception_CKR_KEY_TYPE_INCONSISTENT,
  FStar_PKCS11_Exception_CKR_KEY_UNEXTRACTABLE,
  FStar_PKCS11_Exception_CKR_LIBRARY_LOAD_FAILED,
  FStar_PKCS11_Exception_CKR_MECHANISM_INVALID,
  FStar_PKCS11_Exception_CKR_MECHANISM_PARAM_INVALID,
  FStar_PKCS11_Exception_CKR_NEED_TO_CREATE_THREADS,
  FStar_PKCS11_Exception_CKR_NO_EVENT,
  FStar_PKCS11_Exception_CKR_OBJECT_HANDLE_INVALID,
  FStar_PKCS11_Exception_CKR_OPERATION_ACTIVE,
  FStar_PKCS11_Exception_CKR_OPERATION_NOT_INITIALIZED,
  FStar_PKCS11_Exception_CKR_PIN_EXPIRED,
  FStar_PKCS11_Exception_CKR_PIN_INCORRECT,
  FStar_PKCS11_Exception_CKR_PIN_INVALID,
  FStar_PKCS11_Exception_CKR_PIN_LEN_RANGE,
  FStar_PKCS11_Exception_CKR_PIN_LOCKED,
  FStar_PKCS11_Exception_CKR_PIN_TOO_WEAK,
  FStar_PKCS11_Exception_CKR_PUBLIC_KEY_INVALID,
  FStar_PKCS11_Exception_CKR_RANDOM_NO_RNG,
  FStar_PKCS11_Exception_CKR_RANDOM_SEED_NOT_SUPPORTED,
  FStar_PKCS11_Exception_CKR_SAVED_STATE_INVALID,
  FStar_PKCS11_Exception_CKR_SESSION_COUNT,
  FStar_PKCS11_Exception_CKR_SESSION_EXISTS,
  FStar_PKCS11_Exception_CKR_SESSION_PARALLEL_NOT_SUPPORTED,
  FStar_PKCS11_Exception_CKR_SESSION_READ_ONLY,
  FStar_PKCS11_Exception_CKR_SESSION_READ_ONLY_EXISTS,
  FStar_PKCS11_Exception_CKR_SESSION_READ_WRITE_SO_EXISTS,
  FStar_PKCS11_Exception_CKR_SIGNATURE_LEN_RANGE,
  FStar_PKCS11_Exception_CKR_SIGNATURE_INVALID,
  FStar_PKCS11_Exception_CKR_SLOT_ID_INVALID,
  FStar_PKCS11_Exception_CKR_STATE_UNSAVEABLE,
  FStar_PKCS11_Exception_CKR_TEMPLATE_INCOMPLETE,
  FStar_PKCS11_Exception_CKR_TEMPLATE_INCONSISTENT,
  FStar_PKCS11_Exception_CKR_TOKEN_NOT_RECOGNIZED,
  FStar_PKCS11_Exception_CKR_TOKEN_WRITE_PROTECTED,
  FStar_PKCS11_Exception_CKR_UNWRAPPING_KEY_HANDLE_INVALID,
  FStar_PKCS11_Exception_CKR_UNWRAPPING_KEY_SIZE_RANGE,
  FStar_PKCS11_Exception_CKR_UNWRAPPING_KEY_TYPE_INCONSISTENT,
  FStar_PKCS11_Exception_CKR_USER_ALREADY_LOGGED_IN,
  FStar_PKCS11_Exception_CKR_USER_ANOTHER_ALREADY_LOGGED_IN,
  FStar_PKCS11_Exception_CKR_USER_NOT_LOGGED_IN,
  FStar_PKCS11_Exception_CKR_USER_PIN_NOT_INITIALIZED,
  FStar_PKCS11_Exception_CKR_USER_TOO_MANY_TYPES,
  FStar_PKCS11_Exception_CKR_USER_TYPE_INVALID,
  FStar_PKCS11_Exception_CKR_WRAPPED_KEY_INVALID,
  FStar_PKCS11_Exception_CKR_WRAPPED_KEY_LEN_RANGE,
  FStar_PKCS11_Exception_CKR_WRAPPING_KEY_HANDLE_INVALID,
  FStar_PKCS11_Exception_CKR_WRAPPING_KEY_SIZE_RANGE,
  FStar_PKCS11_Exception_CKR_WRAPPING_KEY_TYPE_INCONSISTENT
}
FStar_PKCS11_Exception_exp_ckr_other;

typedef enum {
  FStar_PKCS11_Exception_G,
  FStar_PKCS11_Exception_S,
  FStar_PKCS11_Exception_T,
  FStar_PKCS11_Exception_C,
  FStar_PKCS11_Exception_M,
  FStar_PKCS11_Exception_O,
  FStar_PKCS11_Exception_TestExc
}
FStar_PKCS11_Exception_exception_t_tags;

typedef struct 
{
  FStar_PKCS11_Exception_exception_t_tags tag;
  union {
    struct  { FStar_PKCS11_Exception_exp_ckr_general exp; } case_G;
    struct  { FStar_PKCS11_Exception_exp_ckr_session exp; } case_S;
    struct  { FStar_PKCS11_Exception_exp_ckr_token exp; } case_T;
    struct  { FStar_PKCS11_Exception_exp_ckr_callback exp; } case_C;
    struct  { FStar_PKCS11_Exception_exp_ckr_mutex exp; } case_M;
    struct  { FStar_PKCS11_Exception_exp_ckr_other exp; } case_O;
  }
  ;
}
FStar_PKCS11_Exception_exception_t;

typedef enum { FStar_Pervasives_Inl, FStar_Pervasives_Inr }
FStar_Pervasives_either__FStar_PKCS11_TypeDeclaration_attribute_t_FStar_PKCS11_Exception_exception_t_tags;

typedef struct 
{
  FStar_Pervasives_either__FStar_PKCS11_TypeDeclaration_attribute_t_FStar_PKCS11_Exception_exception_t_tags
  tag;
  union {
    struct  { FStar_PKCS11_TypeDeclaration_attribute_t v; } case_Inl;
    struct  { FStar_PKCS11_Exception_exception_t v; } case_Inr;
  }
  ;
}
FStar_Pervasives_either__FStar_PKCS11_TypeDeclaration_attribute_t_FStar_PKCS11_Exception_exception_t;

extern FStar_Pervasives_either__FStar_PKCS11_TypeDeclaration_attribute_t_FStar_PKCS11_Exception_exception_t
FStar_PKCS11_Parse_parseAttributeDerive(FStar_PKCS11_TypeDeclaration_attribute_raw x0);

typedef struct 
{
  FStar_Pervasives_either__FStar_PKCS11_TypeDeclaration_attribute_t_FStar_PKCS11_Exception_exception_t_tags
  tag;
  union {
    struct  { Prims_list__FStar_PKCS11_TypeDeclaration_attribute_t *v; } case_Inl;
    struct  { FStar_PKCS11_Exception_exception_t v; } case_Inr;
  }
  ;
}
FStar_Pervasives_either__Prims_list__FStar_PKCS11_TypeDeclaration_attribute_t__FStar_PKCS11_Exception_exception_t;

FStar_Pervasives_either__Prims_list__FStar_PKCS11_TypeDeclaration_attribute_t__FStar_PKCS11_Exception_exception_t
FStar_PKCS11_Parse_parseAttributes(
  Prims_list__FStar_PKCS11_TypeDeclaration_attribute_raw *attr_r
);

extern void FStar_PKCS11_Parse_rng_algorithm(uint8_t *x0, uint32_t x1);

extern void FStar_PKCS11_Parse_rng_algorithm2(uint8_t *x0, uint32_t x1);

typedef struct 
{
  FStar_Pervasives_either__FStar_PKCS11_TypeDeclaration_attribute_t_FStar_PKCS11_Exception_exception_t_tags
  tag;
  union {
    struct  { FStar_PKCS11_TypeDeclaration_mechanism v; } case_Inl;
    struct  { FStar_PKCS11_Exception_exception_t v; } case_Inr;
  }
  ;
}
FStar_Pervasives_either__FStar_PKCS11_TypeDeclaration_mechanism_FStar_PKCS11_Exception_exception_t;

FStar_Pervasives_either__FStar_PKCS11_TypeDeclaration_mechanism_FStar_PKCS11_Exception_exception_t
FStar_PKCS11_Parse_parseMechanism(FStar_PKCS11_TypeDeclaration_mechanism_raw m);
#endif
